name: RSS Feed Check

on:
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-feeds:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Build application
        run: go build -o rss-feed-manager ./cmd/main.go
      
      - name: Run RSS feed manager
        run: ./rss-feed-manager
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
      
      - name: Sync with remote and commit changes
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Initial git status:"
          git status

          # Check if state.json has changes
          if git status --porcelain | grep -q "state.json"; then
            echo "Changes detected in state.json, proceeding with sync and push..."

            # Retry loop to handle race conditions
            for i in {1..3}; do
              echo "Attempt $i of 3 to sync and push..."
              git fetch origin
              git pull origin main  # Use merge instead of rebase for simplicity
              
              echo "Staging and committing changes..."
              git add state.json
              git commit -m "Update feed state [skip ci]"
              
              echo "Pushing to remote..."
              if git push origin main; then
                echo "Push successful!"
                break
              else
                echo "Push failed, retrying after delay..."
                sleep 5  # Wait before retrying to avoid rapid conflicts
              fi
            done

            # If all retries fail, exit with error
            if [ $i -eq 3 ]; then
              echo "All push attempts failed, aborting."
              exit 1
            fi
          else
            echo "No changes to state.json, skipping commit and push."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}